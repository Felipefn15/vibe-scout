#!/usr/bin/env python3
"""
Script para corrigir o arquivo .env adicionando FROM_NAME
"""

import os
import re

def fix_env_file():
    """Adiciona FROM_NAME ao arquivo .env se n√£o existir"""
    
    env_file = '.env'
    
    if not os.path.exists(env_file):
        print("‚ùå Arquivo .env n√£o encontrado!")
        return False
    
    # Ler o arquivo atual
    with open(env_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Verificar se FROM_NAME j√° existe
    if 'FROM_NAME=' in content:
        print("‚úÖ FROM_NAME j√° existe no arquivo .env")
        return True
    
    # Adicionar FROM_NAME ap√≥s FROM_EMAIL
    if 'FROM_EMAIL=' in content:
        # Encontrar a linha do FROM_EMAIL
        lines = content.split('\n')
        new_lines = []
        
        for line in lines:
            new_lines.append(line)
            if line.strip().startswith('FROM_EMAIL='):
                # Adicionar FROM_NAME na pr√≥xima linha
                new_lines.append('FROM_NAME=Felipe Fran√ßa')
        
        # Escrever o arquivo atualizado
        with open(env_file, 'w', encoding='utf-8') as f:
            f.write('\n'.join(new_lines))
        
        print("‚úÖ FROM_NAME adicionado ao arquivo .env")
        return True
    else:
        print("‚ùå FROM_EMAIL n√£o encontrado no arquivo .env")
        return False

def check_sendgrid_key():
    """Verifica se a chave SendGrid est√° v√°lida"""
    print("\nüîç Verificando chave SendGrid...")
    
    # Verificar formato da chave
    sendgrid_key = os.getenv('SENDGRID_API_KEY')
    if not sendgrid_key:
        print("‚ùå SENDGRID_API_KEY n√£o encontrada")
        return False
    
    if not sendgrid_key.startswith('SG.'):
        print("‚ùå Formato da chave SendGrid inv√°lido (deve come√ßar com 'SG.')")
        return False
    
    print("‚úÖ Formato da chave SendGrid parece v√°lido")
    print("‚ö†Ô∏è  Erro 403 pode indicar:")
    print("   - Chave expirada")
    print("   - Chave revogada")
    print("   - Conta SendGrid suspensa")
    print("   - Limite de uso excedido")
    
    return True

def main():
    """Fun√ß√£o principal"""
    print("üîß Corrigindo configura√ß√£o do .env...")
    
    # Corrigir FROM_NAME
    if fix_env_file():
        print("‚úÖ Configura√ß√£o do .env corrigida!")
    else:
        print("‚ùå Erro ao corrigir .env")
        return
    
    # Verificar SendGrid
    check_sendgrid_key()
    
    print("\nüìã Pr√≥ximos passos:")
    print("1. Verificar se a chave SendGrid ainda √© v√°lida")
    print("2. Se necess√°rio, gerar uma nova chave no SendGrid")
    print("3. Executar: python utils/api_validator.py")
    print("4. Se tudo OK, fazer deploy no Railway")

if __name__ == "__main__":
    main() 